" Section: General {{{1
"""""""""""""""""""""""""""""""""
set nocompatible
filetype off

set list

" Don't create swap files
set noswapfile

" Keep 100 lines of history
set history=100

" adjust default Ctrl-U and Ctrl-D paging
"set scroll=50

" Show cursor position
set ruler

" Set encoding
set encoding=utf-8

" Fix backspace (behaves like you would expect)
set backspace=2

" Show status bar
set laststatus=2

" Ignore case when searching
set ignorecase

" Highlight search results (type :noh to unhighlight search)
set hlsearch

" Show line number
set number

set wildmenu
set incsearch
set lazyredraw

set magic
set showmatch
set noerrorbells

" Section: Plugins  {{{1
"""""""""""""""""""""""""""""""""

" Disable plugins
let g:pathogen_disabled = ['']

" Autoload Nerd Tree
autocmd VimEnter * NERDTree
autocmd VimEnter * wincmd p " move cursor to opened file
autocmd StdinReadPre * let s:std_in=1
autocmd VimEnter * if argc() == 0 && !exists("s:std_in") | NERDTree | endif
autocmd bufenter * if (winnr("$") == 1 && exists("b:NERDTreeType") && b:NERDTreeType == "primary") | q | endif
map <C-n> :NERDTreeToggle<CR>
map <C-m> :TagbarToggle<CR>
:nmap <C-S-P> :CtrlP

let delimitMate_expand_cr = 1
" Section: Text, Tab and Indentation {{{1
"""""""""""""""""""""""""""""""""

" Make tabs, trailing whitespace, and non-breaking spaces visible 
exec "set listchars=tab:\uBB\uBB,trail:\uB7,nbsp:~"

set expandtab
set smarttab

set shiftwidth=4 " 1 tab == 4 spaces
set tabstop=4

set ai " auto indent
set si " smart indent
set wrap " wrap lines

filetype plugin indent on

" Section: Colors and Fonts {{{1
"""""""""""""""""""""""""""""""""

" Highlight cursor row
set cursorline

" Enable syntax highlighting
syntax on

set t_Co=256
colorscheme molokai
highlight Normal ctermbg=NONE
highlight nonText ctermbg=NONE

" Set matching bracket color to differentiate from opening bracket
highlight MatchParen cterm=bold ctermfg=cyan ctermbg=black

" vim-airlines font
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif

let g:airline_symbols.space = "\ua0"
let g:airline_powerline_fonts = 1
let g:molokai_original = 1

let g:airline_theme = "simple" " Another good theme is: jellybeans

let g:airline_powerline_fonts = 1
if !exists('g:airline_symbols')
    let g:airline_symbols = {}
endif
let g:airline_symbols.space = "\ua0"

" Section: Functions for improving workflow {{{1
"""""""""""""""""""""""""""""""""""
inoremap <c-l> <Right>
inoremap <c-h> <Left>
inoremap <c-j> <Down>
inoremap <c-k> <Up>

" Section: Miscellaneous {{{1
"""""""""""""""""""""""""""""""""""

" Enable pathogen plugins
execute pathogen#infect()
set runtimepath^=~/.vim/bundle/ctrlp.vim

" Section: Key Mappings {{{1
"""""""""""""""""""""""""""""""""""

" Indent with Tab in visual mode
:vmap <tab> >
:vmap <S-tab> <

" Tab next/prev with vim arrows
map <C-l> gt
map <c-h> gT

" Save file
map <C-s> :w<CR>

" Set Leader Key
:let mapleader = ";"

:nmap <C-S-P> :CtrlP

" use single leader for easy motion
" Disable this if conflicts occur
" with other packages that use the
" leader key
map <Leader> <Plug>(easymotion-prefix)

"autocmd FileType javascript,css,java nnoremap <silent> ,; :call cosco#commaOrSemiColon()<CR>
"autocmd FileType javascript,css,java inoremap <silent> ,; <c-o>:call cosco#commaOrSemiColon()<CR>
