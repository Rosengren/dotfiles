[
  	{ "keys": ["tab"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
	    [
	    	// Tab out of quotes, and closing brackets
	        { "key": "following_text", "operator": "regex_contains", "operand": "^[>'`)}\"\\]]", "match_all": true },
          {"key": "selection_empty"}

	    ]
  	},

  	// Use ctrl+t or ctrl+n to create a new tab
  	{ "keys": ["ctrl+t"], "command": "new_file" },

  	// Shortcut for opening a folder
  	{ "keys": ["ctrl+shift+o"], "command": "prompt_open_folder" },


    // Shortcut for using goto definition
    { "keys": ["alt+d"], "command": "goto_definition" }, 

  	// User Control and arrow keys to select multiple lines
  	{ "keys": ["ctrl+up"], "command": "select_lines", "args": {"forward": false} },
  	{ "keys": ["ctrl+down"], "command": "select_lines", "args": {"forward": true} },
    { "keys": ["ctrl+t"], "command": "side_bar_new_file2" },

    // { "keys": ["f1"], "command": "exit_insert_mode",
    // "context":
    //   [
    //     { "key": "setting.command_mode", "operand": false },
    //     { "key": "setting.is_widget", "operand": false }
    //   ]
    // },

    // { "keys": ["f1"], "command": "enter_insert_mode", "args":
    // {"insert_command": "move", "insert_args": {"by": "characters", "forward": true} },
    
    // "context":
    //   [
    //     {"key": "setting.command_mode"},
    //     {"key": "selection_empty"}
    //   ]
    // },

    // { "keys": ["escape"], "command": "enter_insert_mode", "args":
    // {"insert_command": "move", "insert_args": {"by": "characters", "forward": true} },
    
    // "context":
    //   [
    //     {"key": "setting.command_mode"},
    //     {"key": "selection_empty"}
    //   ]
    // },

    { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`$0`"}, "context":
      [
        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
        { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
        { "key": "following_text", "operator": "regex_contains", "operand": "^(?:\t| |\\)|]|\\}|>|$)", "match_all": true },
      ]
    },
    { "keys": ["`"], "command": "insert_snippet", "args": {"contents": "`${0:$SELECTION}`"}, "context":
      [
        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
        { "key": "selection_empty", "operator": "equal", "operand": false, "match_all": true }
      ]
    },
    { "keys": ["`"], "command": "move", "args": {"by": "characters", "forward": true}, "context":
      [
        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
        { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
        { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
      ]
    },
    { "keys": ["backspace"], "command": "run_macro_file", "args": {"file": "res://Packages/Default/Delete Left Right.sublime-macro"}, "context":
      [
        { "key": "setting.auto_match_enabled", "operator": "equal", "operand": true },
        { "key": "selection_empty", "operator": "equal", "operand": true, "match_all": true },
        { "key": "preceding_text", "operator": "regex_contains", "operand": "`$", "match_all": true },
        { "key": "following_text", "operator": "regex_contains", "operand": "^`", "match_all": true }
      ]
    }
]

